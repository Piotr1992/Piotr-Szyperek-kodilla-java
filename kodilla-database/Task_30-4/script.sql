CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           OLD_TITLE VARCHAR(255) NOT NULL,
                           NEW_TITLE VARCHAR(255) NOT NULL,
                           OLD_PUBYEAR INT(4) NOT NULL,
                           NEW_PUBYEAR INT(4) NOT NULL,
                           OLD_BESTSELLER BOOLEAN,
                           NEW_BESTSELLER BOOLEAN,
                           PRIMARY KEY (EVENT_ID)
);



DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
                     VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;



INSERT INTO BOOKS (BOOK_ID, TITLE, PUBYEAR, BESTSELLER)
VALUES (6, 'Title of New Book', 1990, 0);

COMMIT;





DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

DELIMITER ;



DELETE FROM BOOKS WHERE BOOK_ID = 6;

COMMIT;




DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,
                           NEW_BESTSELLER, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER,
              OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$

DELIMITER ;



UPDATE BOOKS SET TITLE = 'Other title of New Book' WHERE BOOK_ID = 5;

COMMIT;



SELECT * FROM BOOKS_AUD;





CREATE TABLE READERS_AUD (
                             EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                             EVENT_DATE DATETIME NOT NULL,
                             EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                             READER_ID INT(11) NOT NULL,
                             OLD_FIRSTNAME VARCHAR(255) NOT NULL,
                             NEW_FIRSTNAME VARCHAR(255) NOT NULL,
                             OLD_LASTNAME VARCHAR(255) NOT NULL,
                             NEW_LASTNAME VARCHAR(255) NOT NULL,
                             OLD_PESELID VARCHAR(11) NOT NULL,
                             NEW_PESELID VARCHAR(11) NOT NULL,
                             OLD_VIPLEVEL VARCHAR(20) NOT NULL,
                             NEW_VIPLEVEL VARCHAR(20) NOT NULL,
                             PRIMARY KEY (EVENT_ID)
);



DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
                           NEW_PESELID, NEW_VIPLEVEL)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID,
              NEW.VIP_LEVEL);
END $$

DELIMITER ;



INSERT INTO READERS (READER_ID, FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES (6, 'Jan', 'Kowalski', '90021497531', 'Standard customer');

COMMIT;





DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$

DELIMITER ;



DELETE FROM READERS WHERE READER_ID = 6;

COMMIT;



DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
                           NEW_PESELID, NEW_VIPLEVEL, OLD_FIRSTNAME, OLD_LASTNAME,
                           OLD_PESELID, OLD_VIPLEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
              NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME,
              OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;



UPDATE READERS SET FIRSTNAME = 'Steven'
WHERE READER_ID = 5;

COMMIT;



SELECT * FROM READERS_AUD;